<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_AxisTemperature" Id="{dc25bdc5-b5d1-4653-9dd0-c72d7f39ce24}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AxisTemperature
VAR_INPUT
    bFbEnable: BOOL := FALSE;
    fMaxTemperature: LREAL := 0;
    nTempScalingFactor: INT := 10;
    bHWMaskActive: BOOL := FALSE;
END_VAR
VAR_OUTPUT
    bFbEnabled: BOOL;
    fTemperatureValue: LREAL;
    bError: BOOL;
    sErrorMessage: STRING;
END_VAR
VAR
    eTemperatureStates: (eInit := 0, eError := 1, eRun := 2, eFbDisabled := 3):=0;
    nTempPT100 AT %I*: INT;
    fSimTemprature: LREAL := 0.0;
    fTemperatureScaledValue: LREAL;
    sErrorMessageAxis: STRING;
    fbErrorTrig: R_TRIG;
    fbErrorTON: TON;
    fMAX_TEMP_LIMIT: LREAL := 85.0;
    fMIN_TEMP_LIMIT: LREAL := -200.0;
END_VAR
VAR_IN_OUT
     nAxisID: UINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[bFbEnabled := bFbEnable;
sErrorMessageAxis := CONCAT('ERROR: Temparture sensor of axis',INT_TO_STRING(nAxisID));
fbErrorTrig(clk:=bError);

CASE eTemperatureStates OF
    eInit:
        fTemperatureScaledValue := nTempPT100/nTempScalingFactor;
        fTemperatureValue := SEL(bHWMaskActive,fTemperatureScaledValue,fSimTemprature);
        IF NOT bFbEnabled THEN
            eTemperatureStates := eFbDisabled;
        ELSIF fTemperatureValue >= fMAX_TEMP_LIMIT OR fTemperatureValue <= fMIN_TEMP_LIMIT THEN
            eTemperatureStates := eError;
        ELSE
            eTemperatureStates := eRun;
        END_IF

    eError:

        GVL.astAxes[nAxisID].stStatus.fActTemperature := fTemperatureValue;
        GVL.astAxes[nAxisID].stStatus.bHighTempAxisDisabled := TRUE;
        fbErrorTON(in:=bError, PT:=T#10S);
        bError := TRUE;

        IF fbErrorTrig.Q THEN
            IF fTemperatureValue >= fMAX_TEMP_LIMIT THEN
                sErrorMessage := CONCAT(sErrorMessageAxis,' is disconnected');
                ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_ERROR, msgFmtStr := '%s', strArg := sErrorMessage);
            ELSIF fTemperatureValue <= fMIN_TEMP_LIMIT THEN
                sErrorMessage := CONCAT(sErrorMessageAxis,' is wrongly connected, check PT100 pin connections');
                ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_ERROR, msgFmtStr := '%s', strArg := sErrorMessage);
            END_IF
        END_IF

        //Reset bError to display Error message every 10 seconds if error is still there
        IF fbErrorTON.Q THEN
            bError := FALSE;
        END_IF

        eTemperatureStates := eInit;

    eRun:
        bError := FALSE;
        sErrorMessage := '';
        GVL.astAxes[nAxisID].stStatus.fActTemperature := fTemperatureValue;
        IF fMaxTemperature = 0 OR GVL.astAxes[nAxisID].stStatus.fActTemperature < fMaxTemperature THEN
            GVL.astAxes[nAxisID].stStatus.bHighTempAxisDisabled := FALSE;
        ELSIF GVL.astAxes[nAxisID].stStatus.fActTemperature >= fMaxTemperature THEN
            GVL.astAxes[nAxisID].stStatus.bHighTempAxisDisabled := TRUE;
        END_IF

        eTemperatureStates := eInit;

    eFbDisabled:
        GVL.astAxes[nAxisID].stStatus.fActTemperature := 0.0;
        GVL.astAxes[nAxisID].stStatus.bHighTempAxisDisabled := FALSE;
        bError := FALSE;
        sErrorMessage := '';

        IF NOT bFbEnabled THEN
            eTemperatureStates := eFbDisabled;
        ELSE
            eTemperatureStates := eInit;
        END_IF

END_CASE
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>